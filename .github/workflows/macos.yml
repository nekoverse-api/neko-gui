name: MacOS Build and Release

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build Neko Gui
    runs-on:  macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install create-dmg
        run: brew install create-dmg
      
      #  https://docs.github.com/es/actions/use-cases-and-examples/deploying/installing-an-apple-certificate-on-macos-runners-for-xcode-development
      - name: Install Apple Certificate & Provisioning Profile
        env:
          DEV_CERT_B64: ${{ secrets.DEV_CERT_B64 }}
          DEV_CERT_PWD: ${{ secrets.DEV_CERT_PWD }}
          KEYCHAIN_TIMEOUT: 21600
        run: |
          DEV_CERT_P12="$RUNNER_TEMP/dev_cert.p12"
          KEYCHAIN_DB="$RUNNER_TEMP/keychain.keychain-db"
          KEYCHAIN_PWD=$(openssl rand -base64 24)
          security create-keychain -p "$KEYCHAIN_PWD" "$KEYCHAIN_DB"
          security set-keychain-settings -lut "$KEYCHAIN_TIMEOUT" "$KEYCHAIN_DB"
          security unlock-keychain -p "$KEYCHAIN_PWD" "$KEYCHAIN_DB"
          echo -n "$DEV_CERT_B64" | base64 --decode -o "$DEV_CERT_P12"
          security import "$DEV_CERT_P12" -P "$DEV_CERT_PWD" -A -t cert -f pkcs12 -k "$KEYCHAIN_DB"
          security list-keychain -d user -s "$KEYCHAIN_DB"

      - name: Build NekoGui
        env:
          APPLE_TEAM_ID:  ${{ secrets.APPLE_TEAM_ID }}
        run: xcodebuild -scheme NekoGui -configuration Pre -derivedDataPath "$RUNNER_TEMP/DerivedData" -archivePath "$RUNNER_TEMP/NekoGui.xcarchive" -skipPackagePluginValidation DEVELOPMENT_TEAM=$APPLE_TEAM_ID archive | xcpretty

      - name: Create DMG & Notarize (TODO - Fix Sign)
        env:
          CODESIGN_SIGN: ${{ secrets.CODESIGN_SIGN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PWD: ${{ secrets.APPLE_ID_PWD }}
          APPLE_TEAM_ID:  ${{ secrets.APPLE_TEAM_ID }}
        run: |
          ls -la "$RUNNER_TEMP/../neko-gui"
          cp "$RUNNER_TEMP/../neko-gui/Docs/neko.icns" "$RUNNER_TEMP/.neko.icns"
          cp "$RUNNER_TEMP/../neko-gui/Docs/bg.png" "$RUNNER_TEMP/.background.png"
          create-dmg \
            --volname "Neko" \
            --volicon "$RUNNER_TEMP/.neko.icns" \
            --background "$RUNNER_TEMP/.background.png" \
            --window-pos 200 120 \
            --window-size 699 518 \
            --icon-size 128 \
            --icon "NekoGui.app" 170 210 \
            --hide-extension "NekoGui.app" \
            --app-drop-link 530 210 \
            "$RUNNER_TEMP/NekoGui.dmg" \
            "$RUNNER_TEMP/NekoGui.xcarchive/Products/Applications/"

      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: "NekoGui.dmg"
          path: "${{ RUNNER.TEMP }}/NekoGui.dmg"
          if-no-files-found: error
          overwrite: true
          compression-level: 9

      - name: Clean up keychain and provisioning profile (Optional in GitHub Runners)
        if: ${{ always() }}
        run: |
          security delete-keychain "$RUNNER_TEMP/keychain.keychain-db"
          rm -rf "~/Library/MobileDevice/Provisioning Profiles"
